'''
You are given three strings s1, s2, and s3. You have to perform the following operation on these three strings as many times as you want.

In one operation you can choose one of these three strings such that its length is at least 2 and delete the rightmost character of it.

Return the minimum number of operations you need to perform to make the three strings equal if there is a way to make them equal, otherwise, return -1.
'''


class Solution:
    def findMinimumOperations(self, s1: str, s2: str, s3: str) -> int:              
        s1 = list(s1)
        s2 = list(s2)
        s3 = list(s3)
        count = 0

        sl = min(len(s1), len(s2), len(s3))

        for i in range(sl):

            if s1[i] == s2[i] == s3[i]:
                count+=1
            else:
                break
            
        if count == 0: return -1
        return len(s1) + len(s2) + len(s3) - 3 *count
