'''
Нужно выбрать три задачи. Всего в списке n задач, сложность i-й задачи равна ri. Задачи пронумерованы от 1 до n.

Нужно выбрать любые такие три задачи a, b и c, что сложность первой из них строго меньше сложности второй, а сложность второй строго меньше сложности третьей. Иными словами, для выбранных задач a, b и c должно выполняться, что ra<rb<rc.

Если ответов несколько, то выведите любой из них.

Входные данные
В первой строке записано целое число n (3≤n≤3000) — количество задач в списке Поликарпа.

Далее во второй строке записаны n целых чисел r1,r2,…,rn (1≤ri≤109), где ri — сложность i-й задачи.

Выходные данные
Если выбрать три задачи требуемым образом невозможно, то выведите три числа -1. В противном случае выведите любой из способов выбрать три задачи в виде трёх различных целых чисел a,b,c (1≤a,b,c≤n), где a — номер первой выбранной задачи, b — номер второй выбранной задачи, c — номер третьей выбранной задачи.
'''




if __name__ == '__main__':

    n = int(input())
    nums = input().split()
    nums = list(map(int, nums))

    # n = 9
    # nums = [10, 10, 11, 10, 10, 10, 10, 10, 1]
    # n = 6
    # nums = [3, 1, 4, 1, 5, 9]

    old_nums = nums.copy()

    nums.sort()

    a_i = 0
    b_i = 0
    c_i = 0
    found = False
    for i in range(len(nums)):
        if found:
            break
        a = nums[i]

        for j in range(i+1, len(nums)):
            if found:
                break
            b = nums[j]
            if a < b:
                for k in range(j+1, len(nums)):
                    c = nums[k]
                    if a < b < c:

                        old_a_index = old_nums.index(a)+1
                        old_b_index = old_nums.index(b)+1
                        old_c_index = old_nums.index(c)+1

                        print(old_a_index, old_b_index, old_c_index)

                        found = True
                        break

    if not found:
        print(-1, -1, -1)
