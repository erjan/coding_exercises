'''
В строкоремонтную мастерскую принесли строку, состоящую из строчных латинских букв. Заказчик хочет сделать из неё палиндром. В мастерской могут за 1 байтландский тугрик заменить произвольную букву в строке любой выбранной заказчиком буквой.
Какую минимальную сумму придётся заплатить заказчику за ремонт строки?
Напомним, что палиндромом называется строка, которая равна самой себе, прочитанной в обратном направлении.

Формат ввода
Входные данные содержат непустую строку, состоящую из строчных латинских букв, которую принёс заказчик. Длина строки не превосходит 
1
0
4
.
Формат вывода
Выведите одно целое число — минимальную сумму, которую заказчику придётся заплатить за превращение принесённой заказчиком строки в палиндром.
'''

# my solution 

if __name__ == "__main__":
    s = input()
    mid = int(len(s)/2)
    cost = 0
    if len(s) % 2 == 0:
        first_p = s[:mid]
        second_p = s[mid:]

        second_p = second_p[::-1]
        for i in range(len(first_p)):
            if first_p[i] != second_p[i]:
                cost += 1

    elif len(s) % 2 != 0:
        first_p = s[(mid+1):]
        second_p = s[:mid]

        second_p = second_p[::-1]
        for i in range(len(second_p)):
            if first_p[i] != second_p[i]:
                cost += 1

    print(cost)







