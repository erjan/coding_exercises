'''
You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.

'''

class Solution:
    def removePalindromeSub(self, s: str) -> int:
        
        def palin(s):
            
            l = 0
            r = len(s)-1
            while l < r:
                if s[l] == s[r]:
                    l+=1
                    r-=1
                else:
                    return False
            return True            
        
        if len(s) == 0:
            return 0
        if palin(s):
            
            return 1
        return 2
        
        
        
